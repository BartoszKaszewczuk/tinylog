<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="benchmark" default="run">

	<property name="root" location=".." />
	<property name="bin" location="bin" />
	<property name="src" location="src" />
	<property name="lib" location="lib" />
	<property name="dist" location="${root}/distribution" />
	<property name="dist.jar" location="${dist}/jar" />

	<path id="log4j.classpath">
		<fileset dir="${lib}">
			<include name="log4j-1*.jar" />
		</fileset>
	</path>

	<path id="log4j2.classpath">
		<fileset dir="${lib}">
			<include name="log4j-*-2*.jar" />
			<include name="disruptor-*.jar" />
		</fileset>
	</path>

	<path id="logback.classpath">
		<fileset dir="${lib}">
			<include name="slf4j-*.jar" />
			<include name="logback-*.jar" />
		</fileset>
	</path>

	<path id="tinylog.classpath">
		<fileset dir="${dist.jar}">
			<include name="tinylog.jar" />
		</fileset>
	</path>

	<target name="clean">
		<delete dir="${bin}" />
	</target>

	<target name="makedir">
		<mkdir dir="${bin}" />
	</target>

	<target name="compile" depends="clean, makedir">
		<javac srcdir="${src}" destdir="${bin}" includeantruntime="false">
			<classpath refid="log4j.classpath" />
			<classpath refid="log4j2.classpath" />
			<classpath refid="logback.classpath" />
			<classpath refid="tinylog.classpath" />
		</javac>
	</target>

	<target name="run" depends="dummy, file, jul, log4j, log4j2, logback, tinylog" />
	
	<target name="dummy" depends="compile">
		<java classname="org.pmw.benchmark.SingleThreadBenchmark" classpath="${bin}" fork="true">
			<arg value="org.pmw.benchmark.dummy.Dummy" />
		</java>
		<java classname="org.pmw.benchmark.MultiThreadBenchmark" classpath="${bin}" fork="true">
			<arg value="org.pmw.benchmark.dummy.Dummy" />
		</java>
		<java classname="org.pmw.benchmark.PrimesBenchmark" classpath="${bin}" fork="true">
			<arg value="org.pmw.benchmark.dummy.Dummy" />
		</java>
	</target>
	
	<target name="file" depends="compile">
		<java classname="org.pmw.benchmark.SingleThreadBenchmark" classpath="${bin}" fork="true">
			<arg value="org.pmw.benchmark.file.File" />
		</java>
		<java classname="org.pmw.benchmark.MultiThreadBenchmark" classpath="${bin}" fork="true">
			<arg value="org.pmw.benchmark.file.File" />
		</java>
		<java classname="org.pmw.benchmark.PrimesBenchmark" classpath="${bin}" fork="true">
			<arg value="org.pmw.benchmark.file.File" />
		</java>
	</target>
	
	<target name="jul" depends="compile">
		<java classname="org.pmw.benchmark.SingleThreadBenchmark" classpath="${bin}" fork="true">
			<arg value="org.pmw.benchmark.jul.Jul" />
		</java>
		<java classname="org.pmw.benchmark.MultiThreadBenchmark" classpath="${bin}" fork="true">
			<arg value="org.pmw.benchmark.jul.Jul" />
		</java>
		<java classname="org.pmw.benchmark.PrimesBenchmark" classpath="${bin}" fork="true">
			<arg value="org.pmw.benchmark.jul.Jul" />
		</java>
	</target>
	
	<target name="log4j" depends="compile">
		<java classname="org.pmw.benchmark.SingleThreadBenchmark" classpath="${bin}" classpathref="log4j.classpath" fork="true">
			<arg value="org.pmw.benchmark.log4j.Log4j" />
		</java>
		<java classname="org.pmw.benchmark.MultiThreadBenchmark" classpath="${bin}" classpathref="log4j.classpath" fork="true">
			<arg value="org.pmw.benchmark.log4j.Log4j" />
		</java>
		<java classname="org.pmw.benchmark.PrimesBenchmark" classpath="${bin}" classpathref="log4j.classpath" fork="true">
			<arg value="org.pmw.benchmark.log4j.Log4j" />
		</java>
		<java classname="org.pmw.benchmark.SingleThreadBenchmark" classpath="${bin}" classpathref="log4j.classpath" fork="true">
			<arg value="org.pmw.benchmark.log4j.Log4jWithAsyncAppender" />
		</java>
		<java classname="org.pmw.benchmark.MultiThreadBenchmark" classpath="${bin}" classpathref="log4j.classpath" fork="true">
			<arg value="org.pmw.benchmark.log4j.Log4jWithAsyncAppender" />
		</java>
		<java classname="org.pmw.benchmark.PrimesBenchmark" classpath="${bin}" classpathref="log4j.classpath" fork="true">
			<arg value="org.pmw.benchmark.log4j.Log4jWithAsyncAppender" />
		</java>
	</target>
	
	<target name="log4j2" depends="compile">
		<java classname="org.pmw.benchmark.SingleThreadBenchmark" classpath="${bin}" classpathref="log4j2.classpath" fork="true">
			<arg value="org.pmw.benchmark.log4j2.Log4j2" />
		</java>
		<java classname="org.pmw.benchmark.MultiThreadBenchmark" classpath="${bin}" classpathref="log4j2.classpath" fork="true">
			<arg value="org.pmw.benchmark.log4j2.Log4j2" />
		</java>
		<java classname="org.pmw.benchmark.PrimesBenchmark" classpath="${bin}" classpathref="log4j2.classpath" fork="true">
			<arg value="org.pmw.benchmark.log4j2.Log4j2" />
		</java>
		<java classname="org.pmw.benchmark.SingleThreadBenchmark" classpath="${bin}" classpathref="log4j2.classpath" fork="true">
			<arg value="org.pmw.benchmark.log4j2.Log4j2WithAsyncLogger" />
		</java>
		<java classname="org.pmw.benchmark.MultiThreadBenchmark" classpath="${bin}" classpathref="log4j2.classpath" fork="true">
			<arg value="org.pmw.benchmark.log4j2.Log4j2WithAsyncLogger" />
		</java>
		<java classname="org.pmw.benchmark.PrimesBenchmark" classpath="${bin}" classpathref="log4j2.classpath" fork="true">
			<arg value="org.pmw.benchmark.log4j2.Log4j2WithAsyncLogger" />
		</java>
	</target>
	
	<target name="logback" depends="compile">
		<java classname="org.pmw.benchmark.SingleThreadBenchmark" classpath="${bin}" classpathref="logback.classpath" fork="true">
			<arg value="org.pmw.benchmark.logback.Logback" />
		</java>
		<java classname="org.pmw.benchmark.MultiThreadBenchmark" classpath="${bin}" classpathref="logback.classpath" fork="true">
			<arg value="org.pmw.benchmark.logback.Logback" />
		</java>
		<java classname="org.pmw.benchmark.PrimesBenchmark" classpath="${bin}" classpathref="logback.classpath" fork="true">
			<arg value="org.pmw.benchmark.logback.Logback" />
		</java>
		<java classname="org.pmw.benchmark.SingleThreadBenchmark" classpath="${bin}" classpathref="logback.classpath" fork="true">
			<arg value="org.pmw.benchmark.logback.LogbackWithAsyncAppender" />
		</java>
		<java classname="org.pmw.benchmark.MultiThreadBenchmark" classpath="${bin}" classpathref="logback.classpath" fork="true">
			<arg value="org.pmw.benchmark.logback.LogbackWithAsyncAppender" />
		</java>
		<java classname="org.pmw.benchmark.PrimesBenchmark" classpath="${bin}" classpathref="logback.classpath" fork="true">
			<arg value="org.pmw.benchmark.logback.LogbackWithAsyncAppender" />
		</java>
	</target>
	
	<target name="tinylog" depends="compile">
		<java classname="org.pmw.benchmark.SingleThreadBenchmark" classpath="${bin}" classpathref="tinylog.classpath"  fork="true">
			<arg value="org.pmw.benchmark.tinylog.Tinylog" />
		</java>
		<java classname="org.pmw.benchmark.MultiThreadBenchmark" classpath="${bin}" classpathref="tinylog.classpath"  fork="true">
			<arg value="org.pmw.benchmark.tinylog.Tinylog" />
		</java>
		<java classname="org.pmw.benchmark.PrimesBenchmark" classpath="${bin}" classpathref="tinylog.classpath"  fork="true">
			<arg value="org.pmw.benchmark.tinylog.Tinylog" />
		</java>
		<java classname="org.pmw.benchmark.SingleThreadBenchmark" classpath="${bin}" classpathref="tinylog.classpath"  fork="true">
			<arg value="org.pmw.benchmark.tinylog.TinylogWithWritingThread" />
		</java>
		<java classname="org.pmw.benchmark.MultiThreadBenchmark" classpath="${bin}" classpathref="tinylog.classpath" fork="true">
			<arg value="org.pmw.benchmark.tinylog.TinylogWithWritingThread" />
		</java>
		<java classname="org.pmw.benchmark.PrimesBenchmark" classpath="${bin}" classpathref="tinylog.classpath" fork="true">
			<arg value="org.pmw.benchmark.tinylog.TinylogWithWritingThread" />
		</java>
	</target>

</project>
