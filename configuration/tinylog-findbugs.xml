<?xml version="1.0" encoding="UTF-8"?>
<!-- Exclude list of warnings -->
<FindBugsFilter>
	<Match>
		<Or>
			<Class name="org.pmw.tinylog.Logger" />
			<Class name="org.apache.log4j.TinylogBridge" />
			<Class name="org.slf4j.impl.TinylogBridge" />
		</Or>
		<!-- Catching of exceptions is required for the case that the fast but unofficial ways to get the stack trace will fail -->
		<Bug pattern="REC_CATCH_EXCEPTION" />
	</Match>
	<Match>
		<Class name="org.slf4j.impl.StaticLoggerBinder" />
		<!-- SLF4J expected public static (not final!) REQUESTED_API_VERSION -->
		<Bug pattern="MS_PKGPROTECT" />
	</Match>
	<Match>
		<Class name="org.slf4j.impl.StaticLoggerBinderTest" />
		<!-- Test if static REQUESTED_API_VERSION is readable -->
		<Bug pattern="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" />
	</Match>
	<Match>
		<Class name="org.apache.log4j.Priority" />
		<!-- Known as bad but source code is from Log4j -->
		<Bug pattern="HE_EQUALS_USE_HASHCODE" />
	</Match>
	<Match>
		<!-- Default encoding is wanted, even if the encoding will be vary between platforms -->
		<Bug pattern="DM_DEFAULT_ENCODING" />
	</Match>
	<Match>
		<Class name="org.pmw.tinylog.policies.CountPolicy" />
		<!-- Number of skipped characters isn't interesting in this context -->
		<Bug pattern="SR_NOT_CHECKED" />
	</Match>
	<Match>
		<Class name="org.pmw.tinylog.writers.SharedFileWriter" />
		<!-- "file.delete()" can be successful (=> create a new log file) as well as it can fail (=> join existing log file) -->
		<Bug pattern="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" />
	</Match>
	<Match>
		<Source name="~.*\.[A-Za.z]*Test\.java" />
		<!-- Mocks have uncallable methods / Allow to ignore return values to simplify tests  -->
		<Bug pattern="UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS, RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" />
	</Match>
	<Match>
		<Class name="org.pmw.tinylog.writers.VMShutdownHookTest" />
		<!-- Here it is fine to invoke run() method of threads, because logic should be tested and not asynchronism of Java's thread class -->
		<Bug pattern="RU_INVOKE_RUN" />
	</Match>
</FindBugsFilter>